package SuperTest;
/* super关键字的使用
 * 一、super 理解为，父类的。。。
 * 二、super 可以用来调用 属性，方法，构造器
 * 三、super 的使用：
 *   1、格式 “ super.属性 ”和 “ super.方法 ”，显示的调用父类中的属性的方法
 *     但是通常情况下，我们省略super;
 *   2、特殊情况：子类和父类中定义了同名属性时,我们要想在子类中调用父类中声明的
 *     属性，则必须显示的使用“ super.属性 ” 的方式，表明调用的时父类中的属性
 *   3、特殊情况：当子类重写了父类中的方法时，我们想在子类的方法中调用父类的
 *     中被重写的方法时，则必须显式的使用 “ super.方法 ” 的方式，表明调用的
 *     是父类中被重写的方法。
 *
 * 四、super 调用构造器
 *   1、我们可以在子类的构造器中显示的使用“ super(形参列表) ”的方式，调用父类中
 *     声明的指定的构造器。
 *   2、“ super(形参列表) ”的使用，必须声明在子类 构造器的首行！
 *   3、我们在类的构造器中，针对于” this (形参列表) “或“ super(形参列表) ”只能
 *     二选一，不能同时出翔。
 *   4、 都没有显式的声明” this (形参列表) “和“ super(形参列表) ”，则默认是 “ super(形参列表) ”
 *   5、父类中有空参的构造器，才可以省略，（有默认空参）
 *     如果没有空参的构造器，不写“ super(形参列表) ”，就会报错
 *   6、在类的多个构造器中，至少有一个类的构造器中使用了 “ super(形参列表) ”
 *     调用父类中的构造器
 */

public class SuperTest{
    public static void main(String[] args) {
        Student stu = new Student();

        stu.show();

        System.out.println();

        stu.study();//重写后的结果

        Student s2 = new Student("小明","IT",20);
        s2.show();

    }

}
